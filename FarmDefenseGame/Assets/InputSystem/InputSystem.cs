//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/InputSystem/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""Battle"",
            ""id"": ""2cc91ada-5998-4b6d-8349-ce64c04811e7"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ab6a3a96-1c27-43f1-837f-d84792d68400"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Walk"",
                    ""type"": ""Button"",
                    ""id"": ""208c39b2-8071-4032-af5d-188608d1cd1a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""NomalAttack"",
                    ""type"": ""Button"",
                    ""id"": ""2ea165a7-2f6c-4f17-babc-80c6c1cce537"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillAttack1"",
                    ""type"": ""Button"",
                    ""id"": ""c786d553-e379-486b-98bc-d8c005dbe2a9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillAttack2"",
                    ""type"": ""Button"",
                    ""id"": ""9962857d-ddb1-44d1-be81-e2159f8bafc8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillAttack3"",
                    ""type"": ""Button"",
                    ""id"": ""046911c0-9fba-41b7-b92d-2f2c320ea10e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Avoid"",
                    ""type"": ""Button"",
                    ""id"": ""74bc21d1-f2cb-497f-bb41-80ad91631f0b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraMove"",
                    ""type"": ""Value"",
                    ""id"": ""036294f0-7454-4d17-9f11-d78e2ebf086a"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InitCameraPos"",
                    ""type"": ""Button"",
                    ""id"": ""bad488f0-0e82-4ce4-830e-345fa02ecce5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchCameraMode"",
                    ""type"": ""Button"",
                    ""id"": ""b93990ff-706b-4d39-b1c1-93187d778e29"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a380a09a-59ba-4b24-b4d2-c2337a0359fc"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2633a196-9cee-4628-8a33-c7ef246e6e91"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1483f3bb-4ce1-4c79-bb9e-504b6892cb27"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""348cb57e-57d1-44f5-a514-bec8ceb4b509"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f89afe22-517a-4031-90aa-9b4d27f0a87e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6233a463-5de3-479b-a227-7921c8502b6e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a5d068b1-99bd-45c4-8607-27abebc69d34"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4a6d111-e995-4a88-b45e-a6e0d93921cc"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NomalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b2ec88e-751e-437f-9dbc-571e39dff4ce"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NomalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85f40fc9-9d96-4394-9978-43a946b7846a"",
                    ""path"": ""<DualShockGamepad>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95deaf4c-895e-4240-964e-468103d38cda"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d2b7e0c-bc0d-4535-8d47-c310b858f258"",
                    ""path"": ""<DualShockGamepad>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9a693f9-2d9a-4b05-a962-f5060d1225ee"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c759056-dc86-4c5f-bd33-d90053e135d4"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a2f421a-1396-4f31-86d9-562b4fa6fde2"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillAttack3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad82e9c4-55a2-47a8-944a-7a042d3ed52c"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Avoid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ce5aab7-2acf-432a-ac05-aa341471bb5c"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Avoid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a21e83be-2b8a-4326-85dc-715472498813"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""23d8bfec-306d-4be3-ac3f-3be125815f7e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e8e87b95-7152-4fc4-acd5-d2d907a6228c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""457330d7-e355-4d5f-b8a1-f04cbfa885d7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c4d3bdef-90c9-40c5-9f7e-27cf9a01548f"",
                    ""path"": ""<DualShockGamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""dd8f60d0-f7c7-457c-b825-5a7aa9d87730"",
                    ""path"": ""<DualShockGamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9666e387-7cec-44c8-85c3-40d044f4f3b0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InitCameraPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""950d3066-d819-4a8e-81ef-9306de76c3dd"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InitCameraPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d61c925-8b81-4d8a-b2b8-09445ac24793"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchCameraMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c589fff7-6f70-44bf-9f7f-6ef20994960d"",
                    ""path"": ""<DualShockGamepad>/rightShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchCameraMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Search"",
            ""id"": ""a03a10d4-390f-48e8-b968-8ba554aa911f"",
            ""actions"": [
                {
                    ""name"": ""StickInput"",
                    ""type"": ""Value"",
                    ""id"": ""1cdfbaaf-35a6-4ff8-8ac4-027de6622add"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Decide"",
                    ""type"": ""Button"",
                    ""id"": ""a7f5faef-bada-4e06-8a78-3ec5c2d67b2c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""c9791ae3-38e3-4398-9951-77eead96f512"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""30286d99-04b1-4adb-a654-6dd281e14a0e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugBattleStart"",
                    ""type"": ""Button"",
                    ""id"": ""e1d05964-b597-44c0-80ef-df5763c857c0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e409899b-90fb-4cb7-b197-2a4d26b9a63c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5cc28c05-963f-40b7-8d9a-81e0625067ea"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickInput"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a4fa05e5-3e6c-46fa-bb12-dd4c3cf2a18e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e7f98b1e-317e-4d51-b18c-a34de7d0cc33"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3eb96146-e8fd-4f24-8dd8-ce4173c362d2"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ebf750c8-a794-492e-a9ed-3d404bc22c78"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StickInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c5f940f3-21bd-43b5-83d4-399177aa266b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d891de53-3fe8-4b31-9af7-e271a28dcdea"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e277efb3-fec5-4413-ba13-f2feb33b67bb"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""beb9051a-9152-4aac-acbc-3b0048e85808"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugBattleStart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Battle
        m_Battle = asset.FindActionMap("Battle", throwIfNotFound: true);
        m_Battle_Move = m_Battle.FindAction("Move", throwIfNotFound: true);
        m_Battle_Walk = m_Battle.FindAction("Walk", throwIfNotFound: true);
        m_Battle_NomalAttack = m_Battle.FindAction("NomalAttack", throwIfNotFound: true);
        m_Battle_SkillAttack1 = m_Battle.FindAction("SkillAttack1", throwIfNotFound: true);
        m_Battle_SkillAttack2 = m_Battle.FindAction("SkillAttack2", throwIfNotFound: true);
        m_Battle_SkillAttack3 = m_Battle.FindAction("SkillAttack3", throwIfNotFound: true);
        m_Battle_Avoid = m_Battle.FindAction("Avoid", throwIfNotFound: true);
        m_Battle_CameraMove = m_Battle.FindAction("CameraMove", throwIfNotFound: true);
        m_Battle_InitCameraPos = m_Battle.FindAction("InitCameraPos", throwIfNotFound: true);
        m_Battle_SwitchCameraMode = m_Battle.FindAction("SwitchCameraMode", throwIfNotFound: true);
        // Search
        m_Search = asset.FindActionMap("Search", throwIfNotFound: true);
        m_Search_StickInput = m_Search.FindAction("StickInput", throwIfNotFound: true);
        m_Search_Decide = m_Search.FindAction("Decide", throwIfNotFound: true);
        m_Search_Back = m_Search.FindAction("Back", throwIfNotFound: true);
        m_Search_Cancel = m_Search.FindAction("Cancel", throwIfNotFound: true);
        m_Search_DebugBattleStart = m_Search.FindAction("DebugBattleStart", throwIfNotFound: true);
    }

    ~@InputSystem()
    {
        UnityEngine.Debug.Assert(!m_Battle.enabled, "This will cause a leak and performance issues, InputSystem.Battle.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Search.enabled, "This will cause a leak and performance issues, InputSystem.Search.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Battle
    private readonly InputActionMap m_Battle;
    private List<IBattleActions> m_BattleActionsCallbackInterfaces = new List<IBattleActions>();
    private readonly InputAction m_Battle_Move;
    private readonly InputAction m_Battle_Walk;
    private readonly InputAction m_Battle_NomalAttack;
    private readonly InputAction m_Battle_SkillAttack1;
    private readonly InputAction m_Battle_SkillAttack2;
    private readonly InputAction m_Battle_SkillAttack3;
    private readonly InputAction m_Battle_Avoid;
    private readonly InputAction m_Battle_CameraMove;
    private readonly InputAction m_Battle_InitCameraPos;
    private readonly InputAction m_Battle_SwitchCameraMode;
    public struct BattleActions
    {
        private @InputSystem m_Wrapper;
        public BattleActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Battle_Move;
        public InputAction @Walk => m_Wrapper.m_Battle_Walk;
        public InputAction @NomalAttack => m_Wrapper.m_Battle_NomalAttack;
        public InputAction @SkillAttack1 => m_Wrapper.m_Battle_SkillAttack1;
        public InputAction @SkillAttack2 => m_Wrapper.m_Battle_SkillAttack2;
        public InputAction @SkillAttack3 => m_Wrapper.m_Battle_SkillAttack3;
        public InputAction @Avoid => m_Wrapper.m_Battle_Avoid;
        public InputAction @CameraMove => m_Wrapper.m_Battle_CameraMove;
        public InputAction @InitCameraPos => m_Wrapper.m_Battle_InitCameraPos;
        public InputAction @SwitchCameraMode => m_Wrapper.m_Battle_SwitchCameraMode;
        public InputActionMap Get() { return m_Wrapper.m_Battle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BattleActions set) { return set.Get(); }
        public void AddCallbacks(IBattleActions instance)
        {
            if (instance == null || m_Wrapper.m_BattleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BattleActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @NomalAttack.started += instance.OnNomalAttack;
            @NomalAttack.performed += instance.OnNomalAttack;
            @NomalAttack.canceled += instance.OnNomalAttack;
            @SkillAttack1.started += instance.OnSkillAttack1;
            @SkillAttack1.performed += instance.OnSkillAttack1;
            @SkillAttack1.canceled += instance.OnSkillAttack1;
            @SkillAttack2.started += instance.OnSkillAttack2;
            @SkillAttack2.performed += instance.OnSkillAttack2;
            @SkillAttack2.canceled += instance.OnSkillAttack2;
            @SkillAttack3.started += instance.OnSkillAttack3;
            @SkillAttack3.performed += instance.OnSkillAttack3;
            @SkillAttack3.canceled += instance.OnSkillAttack3;
            @Avoid.started += instance.OnAvoid;
            @Avoid.performed += instance.OnAvoid;
            @Avoid.canceled += instance.OnAvoid;
            @CameraMove.started += instance.OnCameraMove;
            @CameraMove.performed += instance.OnCameraMove;
            @CameraMove.canceled += instance.OnCameraMove;
            @InitCameraPos.started += instance.OnInitCameraPos;
            @InitCameraPos.performed += instance.OnInitCameraPos;
            @InitCameraPos.canceled += instance.OnInitCameraPos;
            @SwitchCameraMode.started += instance.OnSwitchCameraMode;
            @SwitchCameraMode.performed += instance.OnSwitchCameraMode;
            @SwitchCameraMode.canceled += instance.OnSwitchCameraMode;
        }

        private void UnregisterCallbacks(IBattleActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @NomalAttack.started -= instance.OnNomalAttack;
            @NomalAttack.performed -= instance.OnNomalAttack;
            @NomalAttack.canceled -= instance.OnNomalAttack;
            @SkillAttack1.started -= instance.OnSkillAttack1;
            @SkillAttack1.performed -= instance.OnSkillAttack1;
            @SkillAttack1.canceled -= instance.OnSkillAttack1;
            @SkillAttack2.started -= instance.OnSkillAttack2;
            @SkillAttack2.performed -= instance.OnSkillAttack2;
            @SkillAttack2.canceled -= instance.OnSkillAttack2;
            @SkillAttack3.started -= instance.OnSkillAttack3;
            @SkillAttack3.performed -= instance.OnSkillAttack3;
            @SkillAttack3.canceled -= instance.OnSkillAttack3;
            @Avoid.started -= instance.OnAvoid;
            @Avoid.performed -= instance.OnAvoid;
            @Avoid.canceled -= instance.OnAvoid;
            @CameraMove.started -= instance.OnCameraMove;
            @CameraMove.performed -= instance.OnCameraMove;
            @CameraMove.canceled -= instance.OnCameraMove;
            @InitCameraPos.started -= instance.OnInitCameraPos;
            @InitCameraPos.performed -= instance.OnInitCameraPos;
            @InitCameraPos.canceled -= instance.OnInitCameraPos;
            @SwitchCameraMode.started -= instance.OnSwitchCameraMode;
            @SwitchCameraMode.performed -= instance.OnSwitchCameraMode;
            @SwitchCameraMode.canceled -= instance.OnSwitchCameraMode;
        }

        public void RemoveCallbacks(IBattleActions instance)
        {
            if (m_Wrapper.m_BattleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBattleActions instance)
        {
            foreach (var item in m_Wrapper.m_BattleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BattleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BattleActions @Battle => new BattleActions(this);

    // Search
    private readonly InputActionMap m_Search;
    private List<ISearchActions> m_SearchActionsCallbackInterfaces = new List<ISearchActions>();
    private readonly InputAction m_Search_StickInput;
    private readonly InputAction m_Search_Decide;
    private readonly InputAction m_Search_Back;
    private readonly InputAction m_Search_Cancel;
    private readonly InputAction m_Search_DebugBattleStart;
    public struct SearchActions
    {
        private @InputSystem m_Wrapper;
        public SearchActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @StickInput => m_Wrapper.m_Search_StickInput;
        public InputAction @Decide => m_Wrapper.m_Search_Decide;
        public InputAction @Back => m_Wrapper.m_Search_Back;
        public InputAction @Cancel => m_Wrapper.m_Search_Cancel;
        public InputAction @DebugBattleStart => m_Wrapper.m_Search_DebugBattleStart;
        public InputActionMap Get() { return m_Wrapper.m_Search; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SearchActions set) { return set.Get(); }
        public void AddCallbacks(ISearchActions instance)
        {
            if (instance == null || m_Wrapper.m_SearchActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SearchActionsCallbackInterfaces.Add(instance);
            @StickInput.started += instance.OnStickInput;
            @StickInput.performed += instance.OnStickInput;
            @StickInput.canceled += instance.OnStickInput;
            @Decide.started += instance.OnDecide;
            @Decide.performed += instance.OnDecide;
            @Decide.canceled += instance.OnDecide;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @DebugBattleStart.started += instance.OnDebugBattleStart;
            @DebugBattleStart.performed += instance.OnDebugBattleStart;
            @DebugBattleStart.canceled += instance.OnDebugBattleStart;
        }

        private void UnregisterCallbacks(ISearchActions instance)
        {
            @StickInput.started -= instance.OnStickInput;
            @StickInput.performed -= instance.OnStickInput;
            @StickInput.canceled -= instance.OnStickInput;
            @Decide.started -= instance.OnDecide;
            @Decide.performed -= instance.OnDecide;
            @Decide.canceled -= instance.OnDecide;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @DebugBattleStart.started -= instance.OnDebugBattleStart;
            @DebugBattleStart.performed -= instance.OnDebugBattleStart;
            @DebugBattleStart.canceled -= instance.OnDebugBattleStart;
        }

        public void RemoveCallbacks(ISearchActions instance)
        {
            if (m_Wrapper.m_SearchActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISearchActions instance)
        {
            foreach (var item in m_Wrapper.m_SearchActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SearchActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SearchActions @Search => new SearchActions(this);
    public interface IBattleActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnWalk(InputAction.CallbackContext context);
        void OnNomalAttack(InputAction.CallbackContext context);
        void OnSkillAttack1(InputAction.CallbackContext context);
        void OnSkillAttack2(InputAction.CallbackContext context);
        void OnSkillAttack3(InputAction.CallbackContext context);
        void OnAvoid(InputAction.CallbackContext context);
        void OnCameraMove(InputAction.CallbackContext context);
        void OnInitCameraPos(InputAction.CallbackContext context);
        void OnSwitchCameraMode(InputAction.CallbackContext context);
    }
    public interface ISearchActions
    {
        void OnStickInput(InputAction.CallbackContext context);
        void OnDecide(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnDebugBattleStart(InputAction.CallbackContext context);
    }
}
